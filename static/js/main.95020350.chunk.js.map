{"version":3,"sources":["images/TicTacToe.png","images/Project_Saigon_IMG.png","TicTacToe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","props","className","highlighted","onClick","value","Board","i","isWinningSquare","this","winningSquares","includes","key","squares","board","row","cols","col","push","renderSquare","generateBoard","React","Component","TicTacToe","state","history","Array","fill","moveLocation","xIsNext","stepNumber","historyAscending","slice","length","Math","floor","calculateWinner","player","setState","concat","step","status","current","winner","moves","map","move","desc","isCurrent","fontWeight","jumpTo","style","handleClick","handleHistorySort","reverse","lines","a","b","c","AppInfo","App","linkStyle","color","textDecoration","basename","Navbar","fixed","bg","variant","Nav","Link","href","to","exact","path","component","Home","Contact","Container","Row","xs","md","lg","Col","Card","Body","Img","src","TicTacToe_Img","Title","Text","Project_Saigon_IMG","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.95020350.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TicTacToe.7f8e612c.png\";","module.exports = __webpack_public_path__ + \"static/media/Project_Saigon_IMG.c912ea81.png\";","import React from 'react';\r\nimport './TicTacToe.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className={\"square\" + (props.highlighted ? ' highlighted' : '')} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    const isWinningSquare = (this.props.winningSquares && this.props.winningSquares.includes(i)) ? true : false;\r\n    return <Square\r\n      key={i}\r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n      highlighted={isWinningSquare}\r\n      />;\r\n  }\r\n\r\n  generateBoard() {\r\n    var board = [];\r\n    for (let row = 0; row < 3; row++) {\r\n      var cols = [];\r\n      for (let col = 0; col < 3; col++) {\r\n        cols.push(this.renderSquare(row*3+col));\r\n      }\r\n      board.push(<div key={row} className=\"board-row\">{cols}</div>);\r\n    }\r\n    return board;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.generateBoard()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TicTacToe extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        moveLocation: {col: null, row: null}\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      historyAscending: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const moveLocation = {\r\n      col: i % 3 + 1,\r\n      row: Math.floor(i / 3) + 1,\r\n    }\r\n    if (calculateWinner(squares).player || squares[i]) return;\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{squares: squares, moveLocation: moveLocation}]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    })\r\n  }\r\n\r\n  handleHistorySort() {\r\n    this.setState({\r\n      historyAscending: !this.state.historyAscending,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares).player;\r\n    \r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move + ` (col:${step.moveLocation.col}, row:${step.moveLocation.row})`:\r\n        'Go to game start';\r\n      const isCurrent = (this.state.stepNumber === move) ? \r\n        {fontWeight: 'bold'} : \r\n        {fontWeight: 'normal'};\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)} style={isCurrent}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    }else if(history.length > 9){\r\n      status = 'It is a draw!'\r\n    }else{\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\r\n    }\r\n    return (\r\n      <div className=\"game page\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            winningSquares={calculateWinner(current.squares).winningSquares}\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <br></br>\r\n          <button onClick={() => this.handleHistorySort()}>\r\n            Toggle Move History Order ({this.state.historyAscending ? 'Ascending' : 'Descending'})\r\n          </button>\r\n          <ol>{this.state.historyAscending ? moves : moves.reverse()}</ol>\r\n        </div>\r\n        \r\n        <AppInfo/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\n// ReactDOM.render(\r\n//   <Game />,\r\n//   document.getElementById('root')\r\n// );\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {player: squares[a], winningSquares: lines[i]};\r\n    }\r\n  }\r\n  return {player: null, winningSquares: null};\r\n}\r\n\r\nconst AppInfo = () => (\r\n  <div>\r\n    <h4>App Features:</h4>\r\n    <ol>\r\n      <li>Lets you play tic-tac-toe.</li>    \r\n      <li>Indicates when a player has won the game.</li>\r\n      <li>\r\n        Stores a game’s history as a game progresses.\r\n      </li>\r\n      <li>\r\n        Allows players to review a game’s history and see previous versions of a game’s board.\r\n      </li>\r\n      <li>\r\n        Display the location for each move in the format (col, row) in the move history list.\r\n      </li>\r\n      <li>\r\n        Bold the currently selected item in the move list.\r\n      </li>\r\n      <li>\r\n        Rewrite Board to use two loops to make the squares instead of hardcoding them.\r\n      </li>\r\n      <li>\r\n        Toggle button that lets you sort the moves in either ascending or descending order.\r\n      </li>\r\n      <li>\r\n        When someone wins, highlight the three squares that caused the win.\r\n      </li>\r\n      <li>\r\n        When no one wins, display a message about the result being a draw.\r\n      </li>\r\n    </ol>\r\n  </div>\r\n  )\r\n\r\nexport default TicTacToe;","import React, { Component } from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport {Container, Card, Row, Col, CardDeck, Nav, Navbar} from 'react-bootstrap';\nimport './App.css';\nimport TicTacToe_Img from './images/TicTacToe.png';\nimport Project_Saigon_IMG from './images/Project_Saigon_IMG.png'\nimport TicTacToe from './TicTacToe'\n\nclass App extends Component {\n  render() {\n    const linkStyle = {color: 'inherit', textDecoration: 'none'};\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <Navbar fixed=\"top\" bg=\"white\" variant=\"light\" className=\"justify-content-center\">\n            <Nav >\n              <Nav.Link href=\"https://kvo189.github.io/\">HOME</Nav.Link>\n              <Nav.Link><Link style={linkStyle} to=\"/\">PROJECTS</Link></Nav.Link>\n              <Nav.Link><Link style={linkStyle} to=\"/Contact\">CONTACT</Link></Nav.Link>\n            </Nav>\n          </Navbar>\n\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/tic-tac-toe\" component={TicTacToe} />\n          <Route path=\"/contact\" component={Contact} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"page\">\n        <Container className=\"p-3 bg-white\">\n          <h2>Projects Showcase</h2>\n          <medium  className=\"text-muted\">Click on image to view project</medium>\n          <hr></hr>\n\n          <Row xs={1} md={2} lg={3}>\n            <Col>\n              <Card>\n                <Card.Body>\n                <Link to=\"/tic-tac-toe\"><Card.Img className=\"shadow-sm zoom\" variant=\"top\" src={TicTacToe_Img} /></Link>\n                  <Card.Title>Tic-Tac-Toe</Card.Title>\n                  <small className=\"text-muted\">created on April 23 2020</small>\n                  <Card.Text>Simple Tic-Tac-Toe Game with React</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card >\n                <Card.Body>\n                  <a href=\"http://www.saigonnoodlehouse280.com\"><Card.Img className=\"shadow-sm zoom\" variant=\"top\" src={Project_Saigon_IMG} /></a>\n                  <Card.Title>Saigonnoodlehouse280.com</Card.Title>\n                  <small className=\"text-muted\">created on May 2018</small>\n                  <Card.Text>\n                    Responsive Web Design with HTML/CSS/JS\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card >\n                <Card.Body>\n                <Link to=\"/tic-tac-toe\"><Card.Img variant=\"top\" src={TicTacToe_Img} /></Link>\n                  <Card.Title>Tic-Tac-Toe</Card.Title>\n                  <small className=\"text-muted\">Created on April 23 2020</small>\n                  <Card.Text>A simple tic-tac-toe game.</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card >\n                <Card.Body>\n                <Link to=\"/tic-tac-toe\"><Card.Img variant=\"top\" src={TicTacToe_Img} /></Link>\n                  <Card.Title>Tic-Tac-Toe</Card.Title>\n                  <small className=\"text-muted\">Created on April 23 2020</small>\n                  <Card.Text>A simple tic-tac-toe game.</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nconst Contact = () => <div className=\"page\"><h2>Contact (TODO)</h2></div>\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}