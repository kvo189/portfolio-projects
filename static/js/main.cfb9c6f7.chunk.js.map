{"version":3,"sources":["images/TicTacToe.png","images/NotesApp.png","images/Project_Saigon_IMG.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","basename","className","Row","render","props","location","exact","path","component","About","Projects","Contact","Component","MyNavBar","Navbar","sticky","bg","variant","Col","this","pathname","to","Container","xs","md","xl","link","imgSrc","NotesApp_Img","cardTitle","date","description","TicTacToe_Img","Project_Saigon_IMG","ProjectCard","Card","Body","href","Img","src","Title","Text","id","style","fontSize","icon","faInfoCircle","color","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cfb9c6f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TicTacToe.7f8e612c.png\";","module.exports = __webpack_public_path__ + \"static/media/NotesApp.97006687.png\";","module.exports = __webpack_public_path__ + \"static/media/Project_Saigon_IMG.c912ea81.png\";","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter, Route, Link} from \"react-router-dom\";\nimport ScrollToTop from 'react-router-scroll-top';\nimport {Container, Card, Row, Col, Navbar} from 'react-bootstrap';\nimport TicTacToe_Img from './images/TicTacToe.png';\nimport NotesApp_Img from './images/NotesApp.png';\nimport Project_Saigon_IMG from './images/Project_Saigon_IMG.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <ScrollToTop>\n        <div className=\"mt-3\">\n          <Row className=\"justify-content-center navbar--show\">\n          <h1 className=\"page-header-text text-secondary\">Khang Vo</h1>\n          </Row>\n          <Route render={(props) => {\n                  return (\n                    <MyNavBar location = {props.location}/>\n                  )\n                }} />\n\n          <Route exact path=\"/\" component={About} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/contact\" component={Contact} />\n        </div>\n        </ScrollToTop>\n      </HashRouter>\n    );\n  }\n}\n\nclass MyNavBar extends Component {\n  render() {\n    return (\n      <Navbar sticky=\"top\" bg=\"white\" variant=\"light\">\n        <Col>\n          <Row className=\"justify-content-center\">\n            <ul className=\"nav navbar-links align-content-center\">\n              <li className={\"navbar-link\" + (this.props.location.pathname === \"/\" ? \" navbar-link-active-1\" : \"\")} >\n                <Link to=\"/\">ABOUT</Link>\n              </li>\n              <li className={\"navbar-link\" + (this.props.location.pathname !== \"/\" && this.props.location.pathname !== \"/contact\"? \" navbar-link-active-2\" : \"\")} >\n                <Link to=\"/projects\">PROJECTS</Link>\n                </li>\n              <li className={\"navbar-link\" + (this.props.location.pathname === \"/contact\" ? \" navbar-link-active-3\" : \"\")} >\n                <Link to=\"/contact\">CONTACT</Link>\n              </li>                \n              <hr className=\"navbar-border\"/> \n            </ul>\n          </Row>\n        </Col>\n      </Navbar>\n    );\n  }\n}\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div>\n        <Container className=\"p-3 fadeIn\">\n          <Row xs={1} md={2} xl={3}>\n            <ProjectCard link='https://kvo189.github.io/notes-app/' \n              imgSrc={NotesApp_Img} \n              cardTitle='React Markdown Notes Taking App'\n              date = 'July 3 2020'\n              description = 'Create and store your notes in markdown format for a later purpose!'\n            />\n            <ProjectCard link=\"https://kvo189.github.io/tic-tac-toe/\"\n              imgSrc={TicTacToe_Img} \n              cardTitle='Tic-Tac-Toe'\n              date = 'April 23 2020'\n              description = 'Simple Tic-Tac-Toe Game with React'\n            />\n            <ProjectCard link=\"http://www.saigonnoodlehouse280.com\"\n              imgSrc={Project_Saigon_IMG} \n              cardTitle='Saigonnoodlehouse280.com'\n              date = 'May 2018'\n              description = 'Responsive Web Design with HTML/CSS/JS'\n            />\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass ProjectCard extends Component {\n  render() {\n    const link = this.props.link,\n      imgSrc = this.props.imgSrc,\n      cardTitle = this.props.cardTitle,\n      date = this.props.date,\n      description = this.props.description;\n\n    return (\n      <Col>\n        <Card>\n          <Card.Body className=\"card-effect\">\n          <a href={link}><Card.Img variant=\"top\" src={imgSrc} /></a>\n            <Card.Title>{cardTitle}</Card.Title>\n            <small className=\"text-muted\">created on {date}</small>\n            <Card.Text>{description}</Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <div id=\"welcome-msg-box\" className=\"custom-shadow fadeIn animate\">\n          <div id=\"welcome-msg-box-header\" className=\"d-flex justify-content-between\">\n            <div className=\"d-flex align-items-center pl-4\">\n              <i className=\"arrow arrow-left\"></i>\n            </div>\n            <div className=\"d-flex flex-column align-items-center justify-content-end m-0\">\n              <img src=\"http://res.cloudinary.com/dpealgfbi/image/upload/v1529722421/profile-img.jpg\" className=\"img-fluid rounded-circle\"/>\n              <span style={{fontSize: \"1rem\"}}>Khang</span>\n            </div>\n            <div className=\"d-flex align-items-center pr-3\">\n              <FontAwesomeIcon className=\"fa-lg\" icon={faInfoCircle} style={{color: \"rgb(66, 134, 244)\"}}></FontAwesomeIcon>\n            </div>\n          </div>\n\n          <div className=\"from-them\">\n            <h1>Hello! My name is <span className=\"text-highlight\">Khang Vo</span></h1>\n          </div>\n          <div className=\"from-them\">\n            <p>Iâ€™m a self taught front end <span className=\"text-highlight\">web developer</span> from Birmingham, AL.</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst Contact = () => <div className=\"page\"><h2>Contact (TODO)</h2></div>\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}